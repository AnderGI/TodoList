html {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  height: 100vh;
  --navBackground: #f59e0b;
  --backgroundColor: #fffbeb;
  --primary: #c5e1a5;
  --easing: cubic-bezier(0.165, 0.84, 0.44, 1);
  --duration: 100ms;
}

body {
  margin: 0;
  height: 100vh;
  display: grid;
  grid-template-rows: 10% 90%;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
    Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
  background-color: var(--backgroundColor);
  overflow: hidden;
  position: relative;
}

/*NAVBAR*/
body > nav {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 1em 3em;
  background-color: var(--navBackground);
}

body > nav span {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  gap: 2em;
}

body > nav button {
  width: 2rem;
  height: 2rem;
  background-color: transparent;
  border: none;
  border-radius: 5px;
  padding: 0.5em 0.75em;
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

body > nav button:hover {
  cursor: pointer;
  background-color: rgba(0, 0, 0, 0.75);
  transform: scale(1.5);
}

body > nav button:hover div {
  background-color: var(--navBackground);
}

body > nav button > div {
  position: absolute;
  width: 50%;
  height: 50%;
  background-color: black;
}
/*Navbar button styling*/

button.menu div {
  clip-path: polygon(
    0% 5%,
    100% 5%,
    100% 25%,
    0% 25%,
    0% 40%,
    100% 40%,
    100% 60%,
    0% 60%,
    0% 75%,
    100% 75%,
    100% 95%,
    0% 95%
  );
}

button.newTodo div {
  clip-path: polygon(
    35% 0%,
    65% 0%,
    65% 35%,
    100% 35%,
    100% 60%,
    65% 60%,
    65% 100%,
    35% 100%,
    35% 60%,
    0% 60%,
    0% 35%,
    35% 35%
  );
}

button.today div {
  clip-path: polygon(
    50% 0%,
    70% 15%,
    70% 2%,
    90% 2%,
    90% 30%,
    100% 40%,
    100% 100%,
    65% 100%,
    65% 65%,
    35% 65%,
    35% 100%,
    0% 100%,
    0% 40%
  );
}

/*Main Content*/
main {
  position: relative;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 1em;
}

aside.hidden {
  opacity: 0;
  transform: translateX(-100%);
  display: none;
}

aside {
  margin-top: 0px;
  position: relative;
  width: 30vw;
  height: 100%;
  background-color: #ffedd5;
  transition: opacity ease 500ms, transform ease 500ms;
}

aside > ul {
  padding: 0.5em 1em;
  margin-top: 0em;
}

aside ul {
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 1em;
  font-size: 1rem;
}

aside ul li {
  padding: 0.25em 1em;
  border-radius: 5px;
}

aside ul li:hover,
aside ul li.active {
  cursor: pointer;
  background-color: rgba(255, 255, 255, 0.75);
}

aside ul li span {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 1em;
  position: relative;
}

aside svg {
  width: 2em;
  height: 2em;
  stroke: black;
}

aside button.newProject {
  width: 1em;
  height: 1em;
  background-color: black;
  border: none;
  clip-path: polygon(
    35% 0%,
    65% 0%,
    65% 35%,
    100% 35%,
    100% 60%,
    65% 60%,
    65% 100%,
    35% 100%,
    35% 60%,
    0% 60%,
    0% 35%,
    35% 35%
  );
  position: absolute;
  right: 1em;
}

aside button.newProject:hover {
  transform: scale(1.5);
  cursor: pointer;
  background-color: var(--navBackground);
}

/*Main container */

body > main.asideOpen {
  display: grid;
  grid-template-columns: 30% 70%;
  grid-template-rows: 1;
}

body > main {
  display: flex;
  flex-direction: column;
  gap: 1em;
}

body > main > section {
  padding: 1em 4em;
}

body > main > section > div.todoContainer {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 1em;
  justify-content: center;
}

body > main.asideOpen > section {
  padding: 1em;
}

main > section {
  width: 100%;
  height: 100%;
}
main h1 {
  text-align: center;
  letter-spacing: 0.1em;
}

/*Modals*/

dialog {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 2;
  transition: transform ease 500ms, opacity ease 500ms;
  box-shadow: 0px 4px 30px rgba(0, 0, 0, 0.5);
  display: grid;
  grid-template-rows: 20% 65% 15%;
  border: none;
  border-radius: 10px;
  padding: 1em 2em;
}

dialog.hidden {
  transform: translateY(100%);
  opacity: 0;
}

dialog header {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}

dialog header h6 {
  font-size: 1.5rem;
  font-weight: 600;
  letter-spacing: 0.1em;
}

dialog span.closeDialog:hover {
  cursor: pointer;
  transform: scale(1.5) rotate(45deg);
  background-color: var(--navBackground);
}

dialog span.closeDialog {
  position: relative;
  width: 1em;
  height: 1em;
  background-color: black;
  transform: rotate(45deg);
  clip-path: polygon(
    35% 0%,
    65% 0%,
    65% 35%,
    100% 35%,
    100% 60%,
    65% 60%,
    65% 100%,
    35% 100%,
    35% 60%,
    0% 60%,
    0% 35%,
    35% 35%
  );
}

dialog footer {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  align-items: flex-end;
  gap: 1.5em;
}

dialog footer button {
  padding: 0.5em 1em;
  border-radius: 5px;
  font-size: 1rem;
  background-color: transparent;
  border: none;
}

dialog footer button:hover {
  cursor: pointer;
  transform: scale(1.1);
}

dialog footer button:first-child {
  border: 1px solid black;
  color: black;
}

dialog footer button:first-child:hover {
  background-color: rgba(0, 0, 0, 0.25);
}

dialog footer button:last-child {
  background-color: var(--navBackground);
  color: snow;
}

dialog.newProject {
  width: 80vh;
  height: 30vh;
}

dialog.newProject main {
  display: grid;
  grid-template-columns: 1fr 2fr;
  column-gap: 1em;
  align-items: center;
}

dialog.newProject main input[type="text"] {
  padding: 0.5em 1em;
}

dialog.newProject label {
  font-weight: 600;
  letter-spacing: 0.1em;
  display: block;
}

dialog.newTodo {
  width: 50vw;
  height: 70vh;
}

dialog.newTodo > main form {
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-columns: 1;
  grid-template-rows: repeat(3, 1fr);
  gap: 2em;
}

dialog.newTodo form section:nth-child(1),
dialog.newTodo form section:nth-child(2) {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: 1;
}

dialog.newTodo form section:nth-child(2) {
  column-gap: 2em;
}

dialog.newTodo form section label {
  display: flex;
  align-items: center;
}

dialog.newTodo form section:nth-child(1) label {
  grid-column-start: 1;
  grid-column-end: 2;
}

dialog.newTodo form section:nth-child(1) input {
  grid-column-start: 2;
  grid-column-end: 7;
  padding: 0.5em 1em;
  letter-spacing: 0.1em;
}

dialog.newTodo form section:nth-child(2) label:first-of-type {
  grid-column-start: 1;
  grid-column-end: 2;
}

dialog.newTodo form section:nth-child(2) input {
  grid-column-start: 2;
  grid-column-end: 4;
  padding: 0.5em 1em;
  letter-spacing: 0.1em;
}

dialog.newTodo form section:nth-child(2) label:last-of-type {
  grid-column-start: 4;
  grid-column-end: 5;
}

dialog.newTodo form section:nth-child(2) select {
  grid-column-start: 5;
  grid-column-end: 7;
  padding: 0.5em 1em;
  letter-spacing: 0.1em;
}

dialog.newTodo form section:nth-child(3) {
  display: grid;
  grid-template-rows: repeat(2, 1fr);
  grid-template-columns: 1;
}

dialog.newTodo form section:nth-child(3) textarea {
  resize: none;
  padding: 0.5em 1em;
  letter-spacing: 0.1em;
}

/*Projects*/
div.projectContainer {
  display: grid;
  grid-template-columns: 1;
  grid-auto-flow: row;
  row-gap: 1em;
  padding: 1em 2em;
}

dialog input {
  font-size: 1rem;
  letter-spacing: 0.1em;
}

dialog input.invalid {
  outline-style: solid;
  outline-width: 2px;
  outline-color: red;
  color: red;
  font-style: italic;
  font-size: 1rem;
  letter-spacing: 0.1em;
}

/*Checkbox animation by henry Ã¶hman from codepen*/
.project {
  padding: 1em 3em;
  background-color: #ffedd5;
  border-radius: 20px;
  width: 80%;
  margin: auto;
  display: flex;
  flex-direction: column;
  pointer-events: none;
  gap: 1.5em;
}

.project section.header {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
}

.checkbox {
  pointer-events: all;
  display: inline-block;
  position: relative;
  padding: 20px 0 20px 60px;
  font-weight: bold;
  cursor: pointer;
}

.project .text {
  display: inline-block;
  transition: transform var(--duration) var(--easing);
  font-size: 1rem;
}

.checkbox:active .text {
  transform: scale(0.9);
}

.checkbox .icon {
  position: absolute;
  height: 40px;
  width: 40px;
  top: 50%;
  left: 0;
  transform: translateY(-50%) rotate(45deg);
}

.checkbox .icon::before,
.checkbox .icon::after {
  content: "";
  display: block;
  position: absolute;
}

.checkbox .icon::before {
  height: 100%;
  width: 100%;
  border-radius: 100%;
  border: 2px solid currentColor;
  background: transparent;
  transition: background var(--duration) var(--easing);
}

.checkbox .icon::after {
  border: 3px solid transparent;
  transition: height var(--duration) ease-in,
    width var(--duration) ease-out var(--duration),
    border-color var(--easing) var(--duration) var(--duration);
  width: 0px;
  height: 0px;
  bottom: 7px;
  left: 12px;
  border-radius: 4px;
  transform-origin: bottom left;
  /*   transform: rotate(45deg); */
}

#checkbox:checked + .checkbox .icon::after {
  width: 8px;
  height: 20px;
  border-right-color: currentColor;
  border-bottom-color: currentColor;
  transition: width var(--duration) ease-in,
    height var(--duration) ease-out var(--duration),
    border-color var(--easing) var(--duration);
}

#checkbox:checked + .checkbox .icon::before {
  background: var(--navBackground);
}

.project span:last-child {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  gap: 1em;
}

.project .deleteBtn {
  pointer-events: all;
  height: 1.5em;
  width: 1.5em;
  background-color: black;
  border: none;
  transform: rotate(45deg);
  clip-path: polygon(
    35% 0%,
    65% 0%,
    65% 35%,
    100% 35%,
    100% 60%,
    65% 60%,
    65% 100%,
    35% 100%,
    35% 60%,
    0% 60%,
    0% 35%,
    35% 35%
  );
}

.project .deleteBtn:hover,
.project .expandContent:hover {
  transform: scale(1.5) rotate(45deg);
  cursor: pointer;
  background-color: var(--navBackground);
}

.project .expandContent {
  pointer-events: all;
  height: 1.5em;
  width: 1.5em;
  background-color: black;
  border: none;
  -webkit-clip-path: polygon(0% 0%, 75% 0%, 100% 50%, 75% 100%, 0% 100%);
  clip-path: polygon(0% 0%, 75% 0%, 100% 50%, 75% 100%, 0% 100%);
}

.project .expandContent:hover,
.project .expandContent.clicked {
  cursor: pointer;
  transform: scale(1.5) rotate(90deg);
  background-color: var(--navBackground);
}

/*Project Todo section*/
.project section.main {
  padding: 1em 2em;
  display: grid;
  grid-template-columns: 1;
  grid-auto-flow: row;
  row-gap: 0.5em;
  background-color: var(--backgroundColor);
  border-radius: 10px;
  display: none;
}

.project section.main.expanded {
  display: block;
}
